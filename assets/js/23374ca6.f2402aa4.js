"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[421],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=n,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return a?r.createElement(h,s(s({ref:t},p),{},{components:a})):r.createElement(h,s({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:n,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6527:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={slug:"/"},s="README",o={unversionedId:"README",id:"README",title:"README",description:"npm (scoped)",source:"@site/docs/README.md",sourceDirName:".",slug:"/",permalink:"/schwab-td-ameritrade-streamer/",draft:!1,tags:[],version:"current",frontMatter:{slug:"/"},sidebar:"sidebar",next:{title:"LICENSE",permalink:"/schwab-td-ameritrade-streamer/LICENSE"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"TD Ameritrade API SDK Client @allensarkisyan/schwab-td-ameritrade-api",id:"td-ameritrade-api-sdk-client-allensarkisyanschwab-td-ameritrade-api",level:3},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Import Module",id:"import-module",level:2},{value:"TDAmeritradeStreamer / WebSocket Client Initialization",id:"tdameritradestreamer--websocket-client-initialization",level:2},{value:"createTDAmeritradeStreamer Factory",id:"createtdameritradestreamer-factory",level:4},{value:"License",id:"license",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Author",id:"author",level:2}],p={toc:c},m="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"readme"},"README"),(0,n.kt)("h1",{id:"javascript--typescript-td-ameritrade-streamer---websocket-client"},"JavaScript / TypeScript TD Ameritrade Streamer - WebSocket client"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://npmjs.com/@allensarkisyan/schwab-td-ameritrade-streamer"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@allensarkisyan/schwab-td-ameritrade-streamer",alt:"npm (scoped)"})),"\n",(0,n.kt)("a",{parentName:"p",href:"/schwab-td-ameritrade-streamer/LICENSE"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/License-MIT-yellow.svg",alt:"License: MIT"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/last-commit/allensarkisyan/schwab-td-ameritrade-streamer",alt:"Last Commit"}),"\n",(0,n.kt)("img",{parentName:"p",src:"https://github.com/allensarkisyan/schwab-td-ameritrade-streamer/workflows/CodeQL/badge.svg?branch=main",alt:"CodeQL"}),"\n",(0,n.kt)("a",{parentName:"p",href:"https://securityscorecards.dev/viewer/?uri=github.com/allensarkisyan/schwab-td-ameritrade-streamer"},(0,n.kt)("img",{parentName:"a",src:"https://api.securityscorecards.dev/projects/github.com/allensarkisyan/schwab-td-ameritrade-streamer/badge",alt:"OpenSSF Scorecard"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://www.bestpractices.dev/projects/7856"},(0,n.kt)("img",{parentName:"a",src:"https://www.bestpractices.dev/projects/7856/badge",alt:"OpenSSF Best Practices"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/issues/allensarkisyan/schwab-td-ameritrade-streamer",alt:"GitHub issues"}),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/actions/workflow/status/allensarkisyan/schwab-td-ameritrade-streamer/tests.yml?label=tests",alt:"GitHub Workflow Status (with event)"}),"\n",(0,n.kt)("a",{parentName:"p",href:"https://codecov.io/gh/allensarkisyan/schwab-td-ameritrade-streamer"},(0,n.kt)("img",{parentName:"a",src:"https://codecov.io/gh/allensarkisyan/schwab-td-ameritrade-streamer/graph/badge.svg?token=Q1LGUU3M8Q",alt:"codecov"}))),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"This is an unofficial JavaScript/TypeScript WebSocket client implementation for the Charles Schwab / TD Ameritrade Streaming APIs. It allows developers to interact with TD Ameritrade's services and access streaming financial data programmatically. Please note that this implementation is not affiliated with or endorsed by Charles Schwab and/or TD Ameritrade."),(0,n.kt)("h3",{id:"td-ameritrade-api-sdk-client-allensarkisyanschwab-td-ameritrade-api"},"TD Ameritrade API SDK Client ",(0,n.kt)("a",{parentName:"h3",href:"https://github.com/allensarkisyan/schwab-td-ameritrade-api"},"@allensarkisyan/schwab-td-ameritrade-api")),(0,n.kt)("h2",{id:"features"},"Features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"MIT Licensed: This project is fully open source and available under the MIT License."),(0,n.kt)("li",{parentName:"ul"},"Cross-Platform: It is designed to work in both Node.js and Browser environments."),(0,n.kt)("li",{parentName:"ul"},"Strongly Typed: The codebase is strongly typed using JSDoc annotations for enhanced code quality and autocompletion support in TypeScript."),(0,n.kt)("li",{parentName:"ul"},"Implementation of Official Streaming Data Endpoints: ",(0,n.kt)("a",{parentName:"li",href:"https://developer.tdameritrade.com/content/streaming-data"},"Official TD Ameritrade Streaming Data Documentation")),(0,n.kt)("li",{parentName:"ul"},"Derived from proprietary & internally developed quantitative trading and research software.")),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"To install and use this TD Ameritrade Streamer client, you can add it to your project using npm or yarn:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @allensarkisyan/schwab-td-ameritrade-streamer\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @allensarkisyan/schwab-td-ameritrade-streamer\n")),(0,n.kt)("h1",{id:"getting-started"},"Getting Started"),(0,n.kt)("p",null,"To get started with this library, follow the documentation provided ",(0,n.kt)("a",{parentName:"p",href:"https://allensarkisyan.github.io/schwab-td-ameritrade-streamer/getting-started"},"here")," for detailed instructions on how to set up and use the client to access TD Ameritrade's Streaming Endpoints."),(0,n.kt)("h1",{id:"see-examples"},"See ",(0,n.kt)("a",{parentName:"h1",href:"https://allensarkisyan.github.io/schwab-td-ameritrade-streamer/EXAMPLES"},"Examples")),(0,n.kt)("h2",{id:"import-module"},"Import Module"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"/** Using ECMAScript Modules */\nimport { TDAmeritradeStreamer } from '@allensarkisyan/schwab-td-ameritrade-streamer';\n\n/** Using CommonJS */\nconst { TDAmeritradeStreamer } = require('@allensarkisyan/schwab-td-ameritrade-streamer');\n")),(0,n.kt)("h2",{id:"tdameritradestreamer--websocket-client-initialization"},"TDAmeritradeStreamer / WebSocket Client Initialization"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { TDAmeritradeAPI } from '@allensarkisyan/schwab-td-ameritrade-api';\n\nconst tdApi = new TDAmeritradeAPI({\n  clientId: process.env.TD_AMERITRADE_CLIENT_ID,\n  callbackUrl: process.env.TD_AMERITRADE_CALLBACK_URL\n});\n\n/** Authenticate with TD Ameritrade and retrieve User Principals data to make a streaming connection */\n\n/** Get User Principals data */\nconst { data: principals } = await tdApi.getUserPrincipals();\n\n/** Configure Streamer Connection Options */\nconst streamerConnectionOptions = {\n  streamerSubscriptionKeys: principals.streamerSubscriptionKeys.keys,\n  quotes: principals.quotes,\n\n  accountId: principals.accounts[0].accountId,\n  company: principals.accounts[0].company,\n  segment: principals.accounts[0].segment,\n  accountCdDomainId: principals.accounts[0].accountCdDomainId,\n  primaryAccountId: principals.accounts[0].primaryAccountId,\n  tokenExpirationTime: principals.accounts[0].tokenExpirationTime,\n\n  streamerSocketUrl: principals.streamerInfo.streamerSocketUrl,\n  token: principals.streamerInfo.token,\n  userGroup: principals.streamerInfo.userGroup,\n  accessLevel: principals.streamerInfo.accessLevel,\n  tokenTimestamp: principals.streamerInfo.tokenTimestamp,\n  appId: principals.streamerInfo.appId,\n  acl: principals.streamerInfo.acl,\n}\n\n/** Quick configuration */\nconst streamerConnectionOptions = {\n  ...principals,\n  ...principals.accounts[0],\n  ...principals.streamerInfo,\n  streamerSubscriptionKeys: principals.streamerSubscriptionKeys.keys,\n};\n\n/** Create a new instance of TDAmeritradeStreamer */\nconst tdStreamer = new TDAmeritradeStreamer(streamerConnectionOptions);\n")),(0,n.kt)("h4",{id:"createtdameritradestreamer-factory"},"createTDAmeritradeStreamer Factory"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { createTDAmeritradeStreamer } from '@allensarkisyan/schwab-td-ameritrade-streamer';\n\nconst tdStreamer = createTDAmeritradeStreamer(streamerConnectionOptions);\n")),(0,n.kt)("h2",{id:"license"},"License"),(0,n.kt)("p",null,"This project is licensed under the MIT License - see the ",(0,n.kt)("a",{parentName:"p",href:"/schwab-td-ameritrade-streamer/LICENSE"},"LICENSE")," file for details."),(0,n.kt)("p",null,"MIT License"),(0,n.kt)("p",null,"Copyright (c) 2023 Allen Sarkisyan"),(0,n.kt)("p",null,'Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:'),(0,n.kt)("p",null,"The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software."),(0,n.kt)("p",null,'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.'),(0,n.kt)("h2",{id:"contributing"},"Contributing"),(0,n.kt)("p",null,"Contributions are welcome! If you have suggestions, bug reports, or would like to contribute to this project,\nplease open an issue or submit a pull request."),(0,n.kt)("h2",{id:"author"},"Author"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/allensarkisyan"},"Allen Sarkisyan")),(0,n.kt)("p",null,"Copyright (c) 2019 - 2023 Allen Sarkisyan. XT-TX. All Rights Reserved."))}d.isMDXComponent=!0}}]);